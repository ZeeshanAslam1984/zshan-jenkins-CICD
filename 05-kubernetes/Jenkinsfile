pipeline {
    agent any

    environment {
        AWS_REGION = "ap-southeast-2"
        DOCKER_IMAGE = "zeeshanaslam1984/jenkins-flask-app"
        KUBECONFIG = "/var/lib/jenkins/.kube/config"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Setup') {
            steps {
                echo "Listing kubeconfig file"
                sh 'ls -la $KUBECONFIG'
                sh 'chmod 644 $KUBECONFIG'
                sh 'ls -la $KUBECONFIG'

                echo "Setting up Python virtual environment"
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install --upgrade pip
                    if [ -f requirements.txt ]; then
                        pip install -r requirements.txt
                    fi
                '''
            }
        }

        stage('Login to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-creds',
                        usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh 'echo "${PASSWORD}" | docker login -u "${USERNAME}" --password-stdin'
                        echo '✅ Login successful'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('05-kubernetes') {
                    script {
                        COMMIT_HASH = sh(returnStdout: true, script: "git rev-parse HEAD").trim()
                        IMAGE_TAG = "${DOCKER_IMAGE}:${COMMIT_HASH}"
                        sh "docker build -t ${IMAGE_TAG} ."
                        echo "Docker image built: ${IMAGE_TAG}"
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                dir('05-kubernetes') {
                    script {
                        sh "docker push ${IMAGE_TAG}"
                        echo "Docker image pushed successfully"
                    }
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                dir('05-kubernetes') {
                    sh '''
                        . venv/bin/activate
                        kubectl config use-context minikube
                        kubectl apply -f k8s-deployment.yaml
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '✅ Deployment successful!'
        }
        failure {
            echo '❌ Deployment failed!'
        }
    }
}
