pipeline {
    agent any

    environment {
        IMAGE_NAME = 'zeeshanaslam1984/zshan-jenkins-docker-flask-app'
        IMAGE_TAG = "${IMAGE_NAME}:${env.GIT_COMMIT}"
        AWS_ACCESS_KEY_ID = credentials('aws-access-key')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-key')
    }

    stages {
        stage('Setup Kubeconfig') {
            steps {
                // Use Jenkins Secret File for kubeconfig
                withCredentials([file(credentialsId: 'kubeconfig-file', variable: 'KUBECONFIG_TMP')]) {
                    sh '''
                        # Create kube directory for Jenkins
                        mkdir -p /var/lib/jenkins/.kube

                        # Copy the secret kubeconfig to Jenkins kube folder
                        cp $KUBECONFIG_TMP /var/lib/jenkins/.kube/config

                        # Set ownership and permissions
                        chown -R jenkins:jenkins /var/lib/jenkins/.kube
                        chmod 600 /var/lib/jenkins/.kube/config

                        # Export KUBECONFIG for this shell session
                        export KUBECONFIG=/var/lib/jenkins/.kube/config

                        # Test kubectl access
                        kubectl get nodes
                    '''
                }
            }
        }

        stage('Deploy Example') {
            steps {
                sh '''
                    # Export KUBECONFIG so kubectl knows which config to use
                    export KUBECONFIG=/var/lib/jenkins/.kube/config

                    # Deploy your application (example)
                    kubectl apply -f k8s-deployment.yaml
                '''
            }
        }
    }
}
